//上传代码测试
github的常用使用代码

rm -rf .git 删除git本地仓库


git clone  https://github.com/wuwenwenIT/test01.git 
将远程仓库clone到本地

git status
可以创建一个text文本，进入text（本身为一个Git仓库），Git Bash，git status查看仓库状态。如果是红色，说明创建的文件text.txt没有被追踪，没有提交到本地仓库。

git add  . 或者git add text.txt
将文件添加到【临时缓冲区】

git commit -m "备注有用的信息"
将其提交到本地仓库

git config --global user.name "My Name"
git config --global user.email "abc@163.com"
第一次提交需要输入用户名和邮箱

git log
查看仓库提交日志

git status
查看仓库状态

git push origin master 或 git push origin main
将本地仓库提交到远程仓库，origin 是远程主机的名字

mkdir： XX (创建一个空目录 XX指目录名)

pwd： 显示当前目录的路径。

git init 把当前的目录变成可以管理的git仓库，生成隐藏.git文件。

git add XX 把xx文件添加到暂存区去。

git commit –m “XX” 提交文件 –m 后面的是注释。

git status 查看仓库状态

git diff XX 查看XX文件修改了那些内容

git log 查看历史记录

git reset –hard HEAD^ 或者 git reset –hard HEAD~ 回退到上一个版本

                    (如果想回退到100个版本，使用git reset –hard HEAD~100 )
1
cat XX 查看XX文件内容

git reflog 查看历史记录的版本号id

git checkout — XX 把XX文件在工作区的修改全部撤销。

git rm XX 删除XX文件

git remote add origin https://github.com/zongyunqingfeng/testgit 关联一个远程库
Git 提示fatal: remote origin already exists 错误解决办法
$ git remote rm origin
$ git remote add origin git@github.com:FBing/java-code-generator
如果执行 git remote rm origin 报错的话，我们可以手动修改gitconfig文件的内容
$ vi .git/config
把 [remote “origin”] 那一行删掉就好了。

$git fetch origin    //获取远程更新
$git merge origin/master //把更新的内容合并到本地分支


git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库

git clone https://github.com/zongyunqingfeng/testgit 从远程库中克隆

git checkout –b dev 创建dev分支 并切换到dev分支上

git branch 查看当前所有的分支

git checkout master 切换回master分支

git merge dev 在当前的分支上合并dev分支

git branch –d dev 删除dev分支

git branch name 创建分支

git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作

git stash list 查看所有被隐藏的文件列表

git stash apply 恢复被隐藏的文件，但是内容不删除

git stash drop 删除文件

git stash pop 恢复文件的同时 也删除文件

git remote 查看远程库的信息

git remote –v 查看远程库的详细信息

git push origin master Git会把master分支推送到远程库对应的远程分支上

